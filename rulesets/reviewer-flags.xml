<?xml version="1.0"?>
<ruleset xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" name="WordPress Plugin Reviewer Flags" xsi:noNamespaceSchemaLocation="https://raw.githubusercontent.com/squizlabs/PHP_CodeSniffer/master/phpcs.xsd">
    <description>Code violations that should be manually checked by plugin reviewers.</description>

    <exclude-pattern>/**/test/*</exclude-pattern>
    <exclude-pattern>/**/tests/*</exclude-pattern>
    <exclude-pattern>/**/vendor/*</exclude-pattern>

    <!-- Rules from WordPress-Core -->

    <!-- Covers rule:  $wpdb->prepare()... The benefit of this is that we don't have to remember
         to manually use esc_sql(), and also that it is easy to see at a glance whether something
         has been escaped or not, because it happens right when the query happens. -->
    <rule ref="WordPress.DB.PreparedSQL"/>

    <!-- Covers rule: Avoid touching the database directly. -->
    <rule ref="WordPress.DB.RestrictedFunctions"/>
    <rule ref="WordPress.DB.RestrictedClasses"/>

    <!-- Rule: The goto statement must never be used. -->
    <rule ref="Generic.PHP.DiscourageGoto">
        <type>error</type>
        <message>The "goto" language construct should not be used.</message>
    </rule>

    <!-- Rule: The eval() construct is very dangerous, and is impossible to secure. ... these must not be used. -->
    <rule ref="Squiz.PHP.Eval.Discouraged">
        <type>error</type>
        <message>eval() is a security risk so not allowed.</message>
    </rule>

    <!-- Rule: create_function() function, which internally performs an eval(),
         is deprecated in PHP 7.2. ... these must not be used. -->
    <rule ref="WordPress.PHP.RestrictedPHPFunctions"/>


    <!-- Rules from WordPress-Extra -->

    <rule ref="WordPress.Security.EscapeOutput"/>

    <!-- Encourage use of wp_safe_redirect() to avoid open redirect vulnerabilities.
         https://github.com/WordPress/WordPress-Coding-Standards/pull/1264 -->
    <rule ref="WordPress.Security.SafeRedirect"/>

    <!-- Verify that a nonce check is done before using values in superglobals.
         https://github.com/WordPress/WordPress-Coding-Standards/issues/73 -->
    <rule ref="WordPress.Security.NonceVerification">
          <exclude name="WordPress.Security.NonceVerification.Recommended"/>
    </rule>


    <!-- Other rules -->

    <rule ref="WordPress.DB.PreparedSQLPlaceholders">
        <exclude name="WordPress.DB.PreparedSQLPlaceholders.LikeWithoutWildcards"/>
        <exclude name="WordPress.DB.PreparedSQLPlaceholders.UnnecessaryPrepare"/>
        <exclude name="WordPress.DB.PreparedSQLPlaceholders.UnfinishedPrepare"/>
        <exclude name="WordPress.DB.PreparedSQLPlaceholders.MissingReplacements"/>
    </rule>

    <rule ref="WordPress.Security.ValidatedSanitizedInput">
        <exclude name="WordPress.Security.ValidatedSanitizedInput.InputNotValidated"/>
        <exclude name="WordPress.Security.ValidatedSanitizedInput.MissingUnslash"/>
    </rule>
</ruleset>
